generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Sample {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("samples")
}

model User {
  id             Int      @id @default(autoincrement())
  name           String
  email          String   @unique
  password       String
  role           Role     @default(USER)
  pictureProfile String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@map("users")
}

model Tenant {
  id             Int      @id @default(autoincrement())
  name           String
  email          String   @unique
  pictureProfile String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@map("tenants")
}

enum Role {
  TENANT
  USER
}

model Property {
  id Int @id @default(autoincrement())
}
model Transaction {
  id            String   @id @default(cuid())
  uuid          String   @unique
  userid        String
  roomid        String
  status        TransactionStatus
  total         Decimal
  startDate     DateTime
  endDate       DateTime
  paymentProof  String?  // or String? if it's optional
  invoke_url    String?
  expiredAt     DateTime
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Relations
  user User @relation(fields: [userid], references: [id], onDelete: Cascade)
  room Room @relation(fields: [roomid], references: [id], onDelete: Cascade)

  @@map("transactions")
}
